name: Create Release on Tag

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: "v${{ matrix.build_env.tag }} - ${{ matrix.build_env.pkgarch}} :: ${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}} build"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_env:
          - tag: "23.05.3"
            pkgarch: aarch64_cortex-a53
            target: mediatek
            subtarget: filogic
            vermagic: "41392fa5d8b91d66a73856a250335fa2"

    steps:
      - name: Checkout OpenWrt
        uses: actions/checkout@v4
        with:
          repository: openwrt/openwrt
          ref: v${{ matrix.build_env.tag }}
          fetch-depth: 0

      - name: Cache Tools and Kernel
        id: cache-tools-kernel
        uses: actions/cache@v4
        env:
          cache-name: "cache-tools-kernel-${{ matrix.build_env.tag }}-${{ matrix.build_env.pkgarch}}-${{ matrix.build_env.target}}-${{ matrix.build_env.subtarget}}"
        with:
          path: "**"
          key: ${{ runner.os }}-build-vm4-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-vm4-cache-tools-kernel-${{ matrix.build_env.tag }}-${{ matrix.build_env.pkgarch}}-

      - name: Setup Feeds and Config
        run: |
          echo "Setting up for tag ${{ matrix.build_env.tag }} / ${{ matrix.build_env.pkgarch }}"
          wget https://downloads.openwrt.org/releases/${{ matrix.build_env.tag }}/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/feeds.buildinfo -O feeds.conf
          echo "src-git awgopenwrt https://github.com/yury-sannikov/awg-openwrt.git" >> feeds.conf
          ./scripts/feeds update -a && ./scripts/feeds install -a

          wget https://downloads.openwrt.org/releases/${{ matrix.build_env.tag }}/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/config.buildinfo -O .config
          echo "CONFIG_PACKAGE_kmod-amneziawg=m" >> .config
          echo "CONFIG_PACKAGE_amneziawg-tools=y" >> .config
          echo "CONFIG_PACKAGE_luci-app-amneziawg=y" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20=m" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20poly1305=m" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-chacha20poly1305=m" >> .config
          make defconfig

      - name: Install Tools and Toolchain
        run: |
          echo "Installing tools..."
          make tools/install -j$(nproc) V=s
          echo "Installing toolchain..."
          make toolchain/install -j$(nproc) V=s

      - name: Check Vermagic (official)
        run: |
          echo "Downloading kernel_*.ipk to extract .vermagic"
          wget https://downloads.openwrt.org/releases/${{ matrix.build_env.tag }}/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/packages/kernel_*.ipk
          tar xf kernel_*.ipk ./data.tar.gz
          tar xf data.tar.gz ./lib/modules/*/.vermagic
          VERMAGIC=$(cat ./lib/modules/*/.vermagic)
          echo "VERMAGIC from official kernel package: $VERMAGIC"

          EXPECTED=${{ matrix.build_env.vermagic }}
          if [ "$VERMAGIC" != "$EXPECTED" ]; then
            echo "‚ùå Vermagic mismatch: got $VERMAGIC, expected $EXPECTED"
            exit 1
          fi

      - name: Build kmod-amneziawg
        run: |
          make package/kmod-amneziawg/clean V=s
          make package/kmod-amneziawg/download V=s
          make package/kmod-amneziawg/prepare V=s
          make package/kmod-amneziawg/compile V=s

      - name: Build amneziawg-tools & luci-app-amneziawg (optional)
        run: |
          make package/amneziawg-tools/{clean,download,prepare,compile} V=s
          make package/luci-app-amneziawg/{clean,download,prepare,compile} V=s

      - name: Collect Artifacts
        run: |
          tag_name=${{ github.ref_name }}
          postfix="${tag_name}_v${{ matrix.build_env.tag }}_${{ matrix.build_env.pkgarch}}_${{ matrix.build_env.target}}_${{ matrix.build_env.subtarget}}"
          mkdir -p awgrelease
          cp bin/packages/${{ matrix.build_env.pkgarch }}/awgopenwrt/kmod-amneziawg_*.ipk awgrelease/kmod-amneziawg_${postfix}.ipk
          cp bin/packages/${{ matrix.build_env.pkgarch }}/awgopenwrt/amneziawg-tools_*.ipk awgrelease/amneziawg-tools_${postfix}.ipk || true
          cp bin/packages/${{ matrix.build_env.pkgarch }}/awgopenwrt/luci-app-amneziawg_*.ipk awgrelease/luci-app-amneziawg_${postfix}.ipk || true

      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          files: awgrelease/*.ipk
